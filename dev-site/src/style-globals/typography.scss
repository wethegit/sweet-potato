@import "../style-utils/breakpoints", "../style-utils/colors",
  "../style-utils/helpers";

:root {
  --font-base: 16;
  --font-body: "Libre Franklin", sans-serif;
  --font-heading: "Barlow", sans-serif;

  --font-weight-bold: 800;
  --font-weight-regular: 400;

  @media #{$large-up} {
    --font-base: 20;
  }
}

html {
  font-family: var(--font-body);
  font-size: calc(var(--font-base) * 1px);
  font-weight: var(--font-weight-regular);
  line-height: 1.5;
}

body {
  @include font-smoothing(on);

  color: var(--color-black);
}

p,
ul,
ol {
  list-style: none;
  margin: 0 0 1em 0;
  padding: 0;

  &:last-child {
    margin-bottom: 0;
  }

  a {
    text-decoration: underline;
    text-underline-offset: 3px; // Firefox only, for now
  }
}

a {
  color: inherit;
  text-decoration: none;
}

h1,
.title-1,
h2,
.title-2,
h3,
.title-3,
h4,
.title-4,
h5,
.title-5 {
  @include font-heading();

  line-height: 1.1;
  margin: 0 0 0.5em 0;
}

h1,
.title-1 {
  font-size: base-rem(30);

  @media #{$large-up} {
    font-size: base-rem(50);
  }
}

h2,
.title-2 {
  font-size: base-rem(28);

  @media #{$large-up} {
    font-size: base-rem(44);
  }
}

h3,
.title-3 {
  font-size: base-rem(24);

  @media #{$large-up} {
    font-size: base-rem(30);
  }
}

h4,
.title-4,
h5,
.title-5 {
  font-size: base-rem(15);

  @media #{$medium-up} {
    font-size: base-rem(18);
  }

  @media #{$large-up} {
    font-size: base-rem(20);
  }
}

// Size
.txt-body {
  font-size: 1rem;
}

.txt-body-smaller {
  font-size: base-rem(12);

  @media #{$large-up} {
    font-size: base-rem(14);
  }
}

.txt-body-larger {
  font-size: base-rem(20);

  @media #{$large-up} {
    font-size: base-rem(22);
  }
}

.txt-body-jumbo {
  @media #{$large-up} {
    font-size: base-rem(60);
  }
}

// Weight
.txt-weight-regular {
  font-weight: var(--font-weight-regular);
}

.txt-weight-bold {
  font-weight: var(--font-weight-bold);
}

// Layout
.txt-center {
  text-align: center;
}

.txt-nobreak {
  white-space: nowrap;
}

// Style
.txt-uppercase {
  text-transform: uppercase;
}

.txt-dark-on-light {
  @include font-smoothing(false);
}

.txt-light-on-dark {
  @include font-smoothing(true);
}

@each $color, $hex in $colors {
  .txt-color-#{$color} {
    color: var(--color-#{$color});
  }
}
