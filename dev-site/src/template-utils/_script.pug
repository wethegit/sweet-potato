//- SCRIPT
  --------
  A wrapper around a native HTML <script> tag.
  This mixin adds the `defer` attribute,
  as well as a `crossorigin` attribute (in dev environments).

  @param {string} src - The script tag's `src` attribute. Use as you would in HTML.

  Usage
  +script({ src: `${globals.RELATIVE_ROOT}/path/to/my/file` })
  +script({
    src: "https://cdnjs.cloudflare.com/ajax/libs/gsap/3.5.1/gsap.min.js"
  })

mixin script({ src })
  script(
    crossorigin=globals.PUBLIC_MODULE_CORS ? '' : undefined,
    defer,
    src=src
  )&attributes(attributes)

//- LOCALSCRIPT
  --------
  Adds a local JavaScript file to the document.
  This handles support for ES+ modules
  and ES5 scripts with the nomodule attribute.

  Usage:
  +localScript({ filename: "homepage" })
  +localScript({ filename: "homepage.js" })

  Notes:
  - The ".js" extension is optional.
  - Files are expected to live in src/website/assets/js/

mixin localScript({ filename })
  - const path = `${globals.RELATIVE_ROOT}/`;
  - const needsExtension = filename.indexOf('.js') < 0;
  - let filenameES5 = filename;

  if needsExtension
    - filename += '.js';
    - filenameES5 += '.es5.js';
  else
    - filenameES5 = filename.split('.js')[0] + '.es5.js';

  +script({ src: `${path}${filename}` })(type="module")
  +script({ src: `${path}${filenameES5}` })(nomodule)
