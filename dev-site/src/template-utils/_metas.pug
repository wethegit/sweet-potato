//- METAS
  -------
  Groups all meta information in one component.

  Parameters
  title {string}            Meta title for the site.
  description {string}      Meta description for the site.
  ogTitle {string}          Open Graph (OG) title for the site. If no ogTitle is passed, this will use the title.
  twTitle {string}          Twitter Title for the site. If no twTitle is passed, this will use the title.
  ogDescription {string}    Open Graph (OG) description for the site. If no ogDescription is passed, this will use the description.
  twDescription {string}    Twitter description for the site. If no twDescription is passed, this will use the description.
  fbAppId {string}          Facebook meta for the site. This is optional, if nothing is passed, it will not render.
  twImagePath {string}      Twitter image path. By default this will use '/assets/img/share-tw.jpg'.
  ogImagePath {string}      Open Graph image path. By default this will use '/assets/img/share-fb.jpg'.

  Usage:
  +meta({
    title: 'This is a title.',
    description: 'This is a description.',
    ogTitle: 'This is a Open Graph title',
    twTitle: 'This is a Twitter title.',
    ogDescription: 'This is a Open Graph description.',
    twDescription: 'This is a Twitter description.',
    fbAppId: 'This is the Facebook meta informaiton.'
  })

mixin metas(options)
  -
    const {
      title,
      description,
      ogTitle,
      twTitle,
      ogDescription,
      twDescription,
      fbAppId,
      twImagePath = '/assets/img/share-tw.jpg',
      ogImagePath = '/assets/img/share-fb.jpg',
      ogImageAlt,
    } = options || {}
    const OG_TITLE = ogTitle || title
    const TW_TITTLE = twTitle || title 
    const OG_DESC = ogDescription || description 
    const TW_DESC = twDescription || description

  //- Base metas
  meta(charset="UTF-8")
  meta(
    content="width=device-width, initial-scale=1.0",
    name="viewport"
  )
  meta(
    content="width=device-width, initial-scale=1, user-scalable=1, minimum-scale=1",
    name="viewport"
  )
  meta(
    content="ie=edge",
    http-equiv="X-UA-Compatible"
  )

  //- Title and description
  meta(
    content=description,
    name="description"
  )
  title= title

  //- Open Graph meta
  meta(
    content=OG_TITLE,
    property="og:title"
  )
  meta(
    content=OG_DESC,
    property="og:description"
  )
  meta(
    content=`${globals.PUBLIC_URL}${globals.htmlLang ? globals.htmlLang === "en" ? "" : `/${globals.htmlLang}` : ""}`,
    property="og:url"
  )
  meta(
    content="website",
    property="og:type"
  )

  if ogImagePath
    meta(
      content=`${globals.PUBLIC_URL}${ogImagePath}`,
      property="og:image"
    )

  if ogImageAlt
    meta(
      content=ogImageAlt
      property="og:image:alt"
    )

  //- Facebook meta
  if fbAppId
    meta(
      content=fbAppId,
      property="fb:app_id"
    )

  //- Twitter meta
  meta(
    content=TW_TITTLE,
    name="twitter:title"
  )
  meta(
    content=`${TW_DESC} ${globals.PUBLIC_URL}`,
    name="twitter:description"
  )

  if twImagePath
    meta(
      content=`${globals.PUBLIC_URL}${twImagePath}`,
      name="twitter:image"
    )

  meta(
    content="yes",
    name="apple-mobile-web-app-capable"
  )

  meta(
    content="black-translucent",
    name="apple-mobile-web-app-status-bar-style"
  )